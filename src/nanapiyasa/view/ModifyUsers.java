/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nanapiyasa.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.ijse.sms.controller.UserAccountController;
import com.ijse.sms.model.UserAccounts;

/**
 *
 * @author Randula
 */
public class ModifyUsers extends javax.swing.JDialog {

    /**
     * Creates new form ModfiyUsers
     */
    char[] pass = null;

    public ModifyUsers(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        newPasswordVerifyTxt.setEnabled(false);
        updateUserBtn.setEnabled(false);
        deleteUserBtn.setEnabled(false);
        changePass.setEnabled(false);
    }
    public void loadTable(){
         DefaultTableModel dtm = (DefaultTableModel) table.getModel();

        try {
            ArrayList<UserAccounts> allUsers = UserAccountController.viewAllUsers();
            dtm.setRowCount(0);
            for (UserAccounts userAccounts : allUsers) {
                Object[] rows = {userAccounts.getId(), userAccounts.getUsername(), userAccounts.getUserType()};
                dtm.addRow(rows);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newPasswordVerifyTxt = new javax.swing.JPasswordField();
        DeleteUserLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        changePass = new javax.swing.JButton();
        showUserNameTxt = new javax.swing.JTextField();
        updateUserBtn = new javax.swing.JLabel();
        reloadBtn1 = new javax.swing.JButton();
        passwordTxt = new javax.swing.JPasswordField();
        showUserTypeTxt = new javax.swing.JTextField();
        updateUserLbl = new javax.swing.JLabel();
        deleteUserBtn = new javax.swing.JLabel();
        idTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        idLbl = new javax.swing.JLabel();
        nameLbl3 = new javax.swing.JLabel();
        userTypeLbl1 = new javax.swing.JLabel();
        passwordLbl = new javax.swing.JLabel();
        passwordVerifyLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modify Users");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        newPasswordVerifyTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));
        newPasswordVerifyTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPasswordVerifyTxtActionPerformed(evt);
            }
        });
        getContentPane().add(newPasswordVerifyTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 460, 290, 30));

        DeleteUserLbl.setText("Delete User Account");
        getContentPane().add(DeleteUserLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 500, 100, 30));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "User ID", "User Name", "User Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 710, 90));

        changePass.setBackground(new java.awt.Color(255, 255, 204));
        changePass.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        changePass.setText("Change Password");
        changePass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        changePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePassActionPerformed(evt);
            }
        });
        getContentPane().add(changePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, 130, 30));

        showUserNameTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));
        getContentPane().add(showUserNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 290, 30));

        updateUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nanapiyasa/view/Images/changeUser.png"))); // NOI18N
        updateUserBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateUserBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateUserBtnMouseClicked(evt);
            }
        });
        getContentPane().add(updateUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 440, 70, 70));

        reloadBtn1.setBackground(new java.awt.Color(255, 255, 204));
        reloadBtn1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        reloadBtn1.setText("Reload");
        reloadBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reloadBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadBtn1ActionPerformed(evt);
            }
        });
        getContentPane().add(reloadBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 180, 130, 30));

        passwordTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));
        passwordTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTxtActionPerformed(evt);
            }
        });
        passwordTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTxtKeyReleased(evt);
            }
        });
        getContentPane().add(passwordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 400, 290, 30));

        showUserTypeTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));
        getContentPane().add(showUserTypeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 290, 30));

        updateUserLbl.setText("Save Changes");
        getContentPane().add(updateUserLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 500, 90, 30));

        deleteUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nanapiyasa/view/Images/removeUser.png"))); // NOI18N
        deleteUserBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteUserBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteUserBtnMouseClicked(evt);
            }
        });
        getContentPane().add(deleteUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 440, 70, 70));

        idTxt.setEditable(false);
        idTxt.setBackground(new java.awt.Color(255, 255, 255));
        idTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));
        getContentPane().add(idTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 290, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setText("Current Users");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        idLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        idLbl.setText("User ID");
        getContentPane().add(idLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 70, -1));

        nameLbl3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nameLbl3.setText("User Name");
        getContentPane().add(nameLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 70, -1));

        userTypeLbl1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        userTypeLbl1.setText("User Type");
        getContentPane().add(userTypeLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 70, -1));

        passwordLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        passwordLbl.setText("Password");
        getContentPane().add(passwordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, 170, -1));

        passwordVerifyLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        passwordVerifyLbl.setText("Confirm Password");
        getContentPane().add(passwordVerifyLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, 120, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nanapiyasa/view/Images/signup.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 925, 550));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newPasswordVerifyTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPasswordVerifyTxtActionPerformed
        if (Arrays.equals(passwordTxt.getPassword(), newPasswordVerifyTxt.getPassword())) {
            JOptionPane.showMessageDialog(this, "Password Verification Successfull");
            updateUserBtn.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "Password Verification Failed");
            newPasswordVerifyTxt.setText(null);
            newPasswordVerifyTxt.setEnabled(false);
            updateUserBtn.setEnabled(false);
            deleteUserBtn.setEnabled(false);
        }
    }//GEN-LAST:event_newPasswordVerifyTxtActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked

        try {
            int i = table.getSelectedRow();
            idTxt.setText(Integer.toString((Integer) table.getValueAt(i, 0)));
            showUserNameTxt.setText((String) table.getValueAt(i, 1));
            showUserTypeTxt.setText((String) table.getValueAt(i, 2));

            String passTemp = UserAccountController.viewPassword(idTxt.getText());
            pass = passTemp.toCharArray();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void changePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePassActionPerformed
        newPasswordVerifyTxt.setEnabled(true);
        updateUserBtn.setEnabled(false);
        deleteUserBtn.setEnabled(false);
        passwordLbl.setText("New Password");
        passwordTxt.setText(null);
    }//GEN-LAST:event_changePassActionPerformed

    private void updateUserBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateUserBtnMouseClicked
        int res = JOptionPane.showOptionDialog(this, "Dou you want to save changes?", "Options", 0, 0, null, null, null);
        if (res == 0) {
            int id = Integer.parseInt(idTxt.getText());
            String userName = showUserNameTxt.getText();
            String password = String.valueOf(passwordTxt.getPassword());
            String userType = showUserTypeTxt.getText();

            UserAccounts userAccounts = new UserAccounts(id, userName, password, userType);
            try {
                boolean isUpdated = UserAccountController.updateUser(userAccounts);
                if (isUpdated) {
                    JOptionPane.showMessageDialog(this, "Successfully Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "Saving Failed");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_updateUserBtnMouseClicked

    private void reloadBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadBtn1ActionPerformed
       loadTable();
       idTxt.setText(null);
       showUserNameTxt.setText(null);
       showUserTypeTxt.setText(null);
       passwordTxt.setText(null);
       newPasswordVerifyTxt.setText(null);
    }//GEN-LAST:event_reloadBtn1ActionPerformed

    private void passwordTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTxtActionPerformed
        if (changePass.isEnabled()) {
            newPasswordVerifyTxt.requestFocusInWindow();
        } else {
            if (Arrays.equals(pass, passwordTxt.getPassword())) {
                updateUserBtn.setEnabled(true);
                deleteUserBtn.setEnabled(true);
                changePass.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Password Incorrect");
                passwordTxt.setText(null);
                updateUserBtn.setEnabled(false);
                deleteUserBtn.setEnabled(false);
            }
        }
    }//GEN-LAST:event_passwordTxtActionPerformed

    private void passwordTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTxtKeyPressed
        if (passwordTxt.getPassword() == null) {
            updateUserBtn.setEnabled(false);
            deleteUserBtn.setEnabled(false);
        }
    }//GEN-LAST:event_passwordTxtKeyPressed

    private void passwordTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTxtKeyReleased
        if (passwordTxt.getPassword() == null) {
            updateUserBtn.setEnabled(false);
            deleteUserBtn.setEnabled(false);
        }
    }//GEN-LAST:event_passwordTxtKeyReleased

    private void deleteUserBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteUserBtnMouseClicked
        int res = JOptionPane.showOptionDialog(this, "Dou you want to Delete this User?", "Options", 0, 0, null, null, null);
        if (res == 0) {
            try {
                int id = Integer.parseInt(idTxt.getText());
                boolean isDeleted = UserAccountController.deleteUser(id);
                if (isDeleted) {
                    JOptionPane.showMessageDialog(this, "User Removed");
                } else {
                    JOptionPane.showMessageDialog(this, "Try Again");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_deleteUserBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModifyUsers dialog = new ModifyUsers(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DeleteUserLbl;
    private javax.swing.JButton changePass;
    private javax.swing.JLabel deleteUserBtn;
    private javax.swing.JLabel idLbl;
    private javax.swing.JTextField idTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLbl3;
    private javax.swing.JPasswordField newPasswordVerifyTxt;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JPasswordField passwordTxt;
    private javax.swing.JLabel passwordVerifyLbl;
    private javax.swing.JButton reloadBtn1;
    private javax.swing.JTextField showUserNameTxt;
    private javax.swing.JTextField showUserTypeTxt;
    private javax.swing.JTable table;
    private javax.swing.JLabel updateUserBtn;
    private javax.swing.JLabel updateUserLbl;
    private javax.swing.JLabel userTypeLbl1;
    // End of variables declaration//GEN-END:variables
}
